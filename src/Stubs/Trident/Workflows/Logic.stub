<?php

namespace App\Trident\Workflows\Logic;

use App\Trident\Workflows\Exceptions\{{Td_entity}}Exception;
use App\Trident\Workflows\Repositories\{{Td_entity}}Repository;
use App\Trident\Interfaces\Workflows\Logic\{{Td_entity}}Interface;
use App\Trident\Business\Logic;

class {{Td_entity}} implements {{Td_entity}}Interface
{
    
    /**
     * @var App
     */
    protected $app;

    /**
     * @var {{Td_entity}}Repository
     */
    protected ${{td_entity}}_repository;

    /**
     * constructor.
     *
     * @var string
     * @return void
     */
    public function __construct($app)
    {
        $this->{{td_entity}}_repository = new {{Td_entity}}Repository($app);
        $this->{{td_entity}} = new Logic\{{Td_entity}}();
    }


    /**
     * validate.
     *
     * @var array
     * @return void
     */
    public function demo(Array $data)
    {
        $result = $this->{{td_entity}}->demo([
            'string' => 'string',
            'integer' => 1,
        ]);

        
        // $this->{{td_entity}}_repository->string = $result['string'];
        // $this->{{td_entity}}_repository->integer = $result['integer'];
        // $this->{{td_entity}}_repository->save();

        

        return true;

    }

    public function get_all()   //~not to be included in code generator~
    {
        return $this->{{td_entity}}_repository->all();
    }
}
